{
  "_args": [
    [
      {
        "raw": "bower-installer",
        "scope": null,
        "escapedName": "bower-installer",
        "name": "bower-installer",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\D.ARUN KUMAR\\Desktop\\Medical-Project"
    ]
  ],
  "_from": "bower-installer@latest",
  "_id": "bower-installer@1.3.6",
  "_inCache": true,
  "_location": "/bower-installer",
  "_nodeVersion": "7.9.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/bower-installer-1.3.6.tgz_1492816128496_0.9538739824201912"
  },
  "_npmUser": {
    "name": "rquadling",
    "email": "RQuadling@GMail.com"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {
    "fs.realpath": "1.0.0",
    "inflight": "1.0.6",
    "inherits": "2.0.3",
    "minimatch": "3.0.4",
    "once": "1.3.3",
    "path-is-absolute": "1.0.1"
  },
  "_requested": {
    "raw": "bower-installer",
    "scope": null,
    "escapedName": "bower-installer",
    "name": "bower-installer",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/bower-installer/-/bower-installer-1.3.6.tgz",
  "_shasum": "cf7839b65421d2b270ab22c74fc858a55e3a1370",
  "_shrinkwrap": null,
  "_spec": "bower-installer",
  "_where": "C:\\Users\\D.ARUN KUMAR\\Desktop\\Medical-Project",
  "author": {
    "name": "Bret Little"
  },
  "bin": {
    "bower-installer": "./bower-installer.js"
  },
  "bugs": {
    "url": "https://github.com/rquadling/bower-installer/issues"
  },
  "contributors": [
    {
      "name": "Richard Quadling"
    }
  ],
  "dependencies": {
    "async": "^2.1.4",
    "bower": "^1.8.0",
    "colors": "^1.1.2",
    "glob": "^7.1.1",
    "lodash": "^4.17.2",
    "mkdirp": "^0.5.1",
    "node-fs": "~0.1.7",
    "nopt": "^3.0.6"
  },
  "description": "Tool for installing bower dependencies that won't include entire repos",
  "devDependencies": {
    "jasmine": "^2.5.2",
    "rimraf": "^2.5.4"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "cf7839b65421d2b270ab22c74fc858a55e3a1370",
    "tarball": "https://registry.npmjs.org/bower-installer/-/bower-installer-1.3.6.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "gitHead": "bb89b88e7ac75ac48e2d8d5335151ba3df7d457e",
  "homepage": "https://github.com/rquadling/bower-installer#readme",
  "keywords": [
    "bower",
    "install",
    "dependencies"
  ],
  "license": "MIT",
  "main": "bower-installer.js",
  "maintainers": [
    {
      "name": "blittle",
      "email": "bret.little@gmail.com"
    },
    {
      "name": "rquadling",
      "email": "RQuadling@GMail.com"
    }
  ],
  "name": "bower-installer",
  "optionalDependencies": {},
  "preferGlobal": true,
  "readme": "bower-installer [![Build Status](https://travis-ci.org/rquadling/bower-installer.png?branch=master)](https://travis-ci.org/rquadling/bower-installer)\n===============\n\nTool for installing bower dependencies that won't include entire repos. Although Bower works great\nas a light-weight tool to quickly install browser dependencies, it currently does not provide much\nfunctionality for installing specific \"built\" components for the client.\n\n# Bower installs entire repositories\n\n```json\n{\n    \"name\": \"test\",\n    \"version\": \"0.1\",\n    \"dependencies\": {\n        \"backbone\": \"latest\"\n    }\n}\n```\nIf `bower install` is run on this configuration file, the entire backbone repository will be pulled down\nand copied into a components directory. This repository is quite large, when probably only a built js and css\nfile are needed.  Bower conveniently provides the `bower list --paths` command to list the actual main files associated\nwith the components (if the component doesn't define a main, then the whole repository is listed instead).\n\n# Bower Installer\nBower installer provides an easy way for the main files to be installed or moved to one or more locations. Simply add to\nyour bower.json an `install` key and `path` attribute:\n\n```json\n{\n    \"name\": \"test\",\n    \"version\": \"0.1\",\n    \"dependencies\": {\n        \"backbone\": \"latest\"\n    },\n    \"install\": {\n        \"path\": \"some/path\"\n    }\n}\n```\n\nInstall bower-installer by executing\n\n```bash\nnpm install -g bower-installer\n```\n\nFrom the terminal in the same directory as your bower.json file, enter:\n```bash\nbower-installer\n```\n\nAfter executing this, `backbone.js` will exist under `some/path` relative to the location of your\nbower.json file.\n\n# Overriding main files\nA lot of registered components for bower do not include bower.json configuration. Therefore, bower does not know\nabout any \"main files\" and therefore, by default bower-installer doesn't know about them either. Bower-installer\ncan override an existing main file path or provide a non-existant one:\n\n```json\n{\n    \"name\": \"test\",\n    \"version\": \"0.1\",\n    \"dependencies\": {\n        \"backbone\": \"latest\",\n        \"requirejs\": \"latest\"\n    },\n    \"install\": {\n        \"path\": \"some/path\",\n        \"sources\": {\n            \"requirejs\": \"bower_components/requirejs/require.js\"\n        }\n    }\n}\n```\nIf bower installer is run on this configuration, `require.js` and `backbone.js` will all appear under\n`some/path` relative to your bower.json file. \n\n# Install multiple main files\nFor one reason or another you may want to install multiple files from a single component. You can do this by providing\nan `Array` instead of a `String` inside the sources hash. Or you can use file matchers [https://github.com/isaacs/minimatch](https://github.com/isaacs/minimatch):\n\n```json\n{\n    \"name\": \"test\",\n    \"version\": \"0.1\",\n    \"dependencies\": {\n        \"jquery-ui\": \"latest\",\n        \"datejs\": \"*\"\n    },\n    \"install\": {\n        \"path\": \"some/path\",\n        \"sources\": {\n            \"jquery-ui\": [\n            \"bower_components/jquery-ui/ui/jquery-ui.custom.js\",\n            \"bower_components/jquery-ui/themes/start/jquery-ui.css\"\n            ],\n            \"datejs\": \"bower_components/datejs/build/*.*\"\n        }\n    }\n}\n```\n\n# Install files to multiple locations\nFiles can be installed to multiple locations based upon file type or regular expression. Do so by modifying the `path` to be a map of file-type\nlocations. Example:\n```json\n{\n    \"name\": \"test\",\n    \"version\": \"0.1\",\n    \"dependencies\": {\n        \"jquery-ui\": \"latest\"\n    },\n    \"install\": {\n        \"path\": {\n            \"css\": \"src/css\",\n            \"js\": \"src/js\",\n            \"/[sc|le]ss$/\": \"src/css\"\n        },\n        \"sources\": {\n            \"jquery-ui\": [\n            \"bower_components/jquery-ui/ui/jquery-ui.custom.js\",\n            \"bower_components/jquery-ui/themes/start/jquery-ui.css\"\n            ]\n        }\n    }\n}\n```\n\n# Configurable paths\nPaths can be custom configurable with variables (key, name and version):\n```json\n{\n    \"name\": \"test\",\n    \"version\": \"0.0.2\",\n    \"dependencies\": {\n        \"bootstrap\": \"~3.0.3\"\n    },\n    \"install\": {\n        \"base\":  \"build\",\n        \"path\": {\n            \"js\": \"{name}/js\",\n            \"css\": \"{name}/css\",\n            \"eot\": \"{name}/fonts\",\n            \"svg\": \"{name}/fonts\",\n            \"ttf\": \"{name}/fonts\",\n            \"woff\": \"{name}/fonts\"\n        }       \n    }\n}\n```\n\nWill create this output structure:\n```\nbuild/\n    bootstrap/\n        js\n        css\n        fonts\n    jquery\n        js\n```\n\n# Rename files during copy\nFiles can be renamed when bower-installer is copying them to their new destination. Do so by modifying the `mapping` object. Example:\n ```json\n {\n    \"name\": \"test\",\n    \"version\": \"0.1\",\n    \"dependencies\": {\n        \"jquery-ui\": \"latest\"\n    },\n    \"install\": {\n        \"path\": \"some/path\",\n        \"sources\": {\n            \"jquery-ui\": {\n                \"mapping\": [\n                {\"bower_components/jquery-ui/ui/jquery-ui.js\": \"jquery-ui.js\"},\n                {\"bower_components/jquery-ui/ui/minified/jquery-ui.min.js\": \"jquery-ui-min-new-name.js\"}\n                ]\n            }\n        }\n    }\n}\n```\n\n# Ignore files\nFiles can be ignored and not copied. Do so by adding the appropriate  to the `ignore` array. In the following example,\n`ember-model` has as dependency on `ember` and `handlebars`, so normally `ember` and the `handlebars` js files would be copied but in this case we don't want them copied over.\nExample:\n ```json\n {\n    \"name\": \"test\",\n    \"version\": \"0.1\",\n    \"dependencies\": {\n        \"ember-model\": \"0.0.8\"\n    },\n    \"install\": {\n        \"path\": \"build/src\",\n        \"ignore\": [\"ember\", \"handlebars\"]\n    }\n}\n```\n\n# Benefits from glob patterns\nYou can specify a folder and get all files inside it preserving its folder structure.\nExample:\n```json\n{\n    \"name\": \"test\",\n    \"version\": \"0.1\",\n    \"dependencies\": {\n        \"datatables-bootstrap3\": \"latest\"\n    },\n    \"install\": {\n        \"path\": {\n            \"scss\": \"build/styles\",\n            \"js\": \"build/js\"\n        },\n        \"sources\": {\n            \"datatables-bootstrap3\": \"bower_components/datatables-bootstrap3/BS3/assets/**\"\n        }\n    }\n}\n```\n\n# Mapping folders\nEntire folders can be mapped.\nExample:\n```json\n{\n  \"name\": \"test\",\n  \"version\": \"0.10\",\n  \"dependencies\": {\n    \"jquery-ui\": \"latest\"\n  },\n  \"install\": {\n    \"path\": \"build/src\",\n    \"sources\": {\n      \"jquery-ui\": {\n        \"mapping\": [\n          {\"bower_components/jquery-ui/themes/base/**\": \"base\"},\n          {\"bower_components/jquery-ui/jquery-ui.min.js\": \"jquery-ui.min.js\"}\n        ]\n      }\n    }\n  }\n}\n```\n\nwill result in \n```\nbuild/src/jquery/jquery.js\nbuild/src/jquery-ui/jquery-ui.min.js\nbuild/src/jquery-ui/base/*\n```\n\nwhere `build/src/jquery-ui/base/*` contains the CSS and JS for the base theme.\n\n# Excluding package name from destination folder\nThe package name can be excluded from the `path`.\nExample:\n```json\n{\n  \"name\": \"test\",\n  \"version\": \"0.10\",\n  \"dependencies\": {\n    \"jquery-ui\": \"latest\"\n  },\n  \"install\": {\n    \"options\": {\n      \"includePackageNameInInstallPath\": false\n    },\n    \"path\": \"build/src\",\n    \"sources\": {\n      \"jquery-ui\": {\n        \"mapping\": [\n          {\"bower_components/jquery-ui/themes/base/**\": \"base\"},\n          {\"bower_components/jquery-ui/jquery-ui.min.js\": \"jquery-ui.min.js\"}\n        ]\n      }\n    }\n  }\n}\n```\n\nwill result in \n```\nbuild/src/jquery.js\nbuild/src/jquery-ui.min.js\nbuild/src/base/*\n```\n\nwhere `build/src/base/*` contains the CSS and JS for the base theme.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rquadling/bower-installer.git"
  },
  "scripts": {
    "test": "jasmine JASMINE_CONFIG_PATH=test/jasmine.config.json"
  },
  "version": "1.3.6"
}
